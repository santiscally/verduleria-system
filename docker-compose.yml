version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: verduleria_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: verduleria_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - verduleria-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: verduleria_backend
    restart: always
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env.${ENV:-local}
    environment:
      DB_HOST: postgres
    networks:
      - verduleria-network
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001/api}
    container_name: verduleria_frontend
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env.${ENV:-local}
    networks:
      - verduleria-network
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # pgAdmin (opcional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: verduleria_pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@verduleria.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    networks:
      - verduleria-network
    depends_on:
      - postgres

networks:
  verduleria-network:
    driver: bridge

volumes:
  postgres_data: